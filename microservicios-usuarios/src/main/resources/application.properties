##parametros cliente eureka
spring.application.name=microservicio-usuarios
##puerto aleatorio y automatico
server.port=${PORT:0}
##id del servicio,digo que es el mismo que el que tenga la aplicacion y luego un valor aleatorio para que pueda haber mas de uno
eureka.instance.instance-id=${spring.application.name}:${random.value}
##ruta de eureka,donde va a ir a enviar la señal y darse de alta
eureka.client.service-url.defaultZone=http://localhost:8761/eureka


# Set here configurations for the database connection
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/microservicio?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=admin
spring.datasource.password=password
##para mysql
##spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

##para mariaDB
spring.jpa.database-platform=org.hibernate.dialect.MariaDB103Dialect


##genera la tabla
spring.jpa.generate-ddl=true

##muestra las consultas
logging.level.org.hibernate.SQL=debug

#Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update

# Show or not log for each sql query
spring.jpa.show-sql=true
# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.thymeleaf.cache=false

#PARA QUE NO DE PROBLEMAS LA SEGURIDAD
spring.main.allow-circular-references=true

#PARA QUE SE PUEDAN SUBIR FICHEROS
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
